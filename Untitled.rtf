{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 nextflow run nest4.nf -c config.config --pic_def <picard_path>\
\
Remove the dash def\
\
os.path.abspath("$params.input.folder")\
Don\'92t do it for output directory\
\
Input section\
\pard\pardeftab720\sl340\partightenfactor0
\cf2 path out_dir from out_path\
\pard\pardeftab720\sl340\partightenfactor0
\cf2 \
\pard\pardeftab720\sl340\partightenfactor0
\cf2 $\{out_dir\}\
\pard\pardeftab720\sl340\partightenfactor0
\cf2 \
\pard\pardeftab720\sl340\partightenfactor0
\cf2 \\d+ \
regex\
\
\pard\pardeftab720\sl340\partightenfactor0
\cf2 $params.input.fastq_path + "/*/*...."\
Separate it out\
\
Trimdata process\
Input\
each samp from fastq_path\
100\
101\
\
Triple quote\
Remove the loggers\
Nextflow takes care of logging\
\
Publishdir\
params.output.folder/combinedfastq/$sample\
"combinedFastq/$\{sample\}"\
\
Just run the trim data\
Data would be same\
Don\'92t think about other section\
Then add align sequence\
Send it to Shashi\
Test fast file\
Reference\
\
Create unit test\
With different cases\
Fast file has read1 read2\
Two lanes\
Four lanes\
Eight files\
How nest handle all that\
\
Two samples read 1 and read 2\
Unit test for each of processes\
Multiprocessing \
Fix doesn\'92t work so well\
\
--------Unit test\'97\'97\'97\
\
Docker\
Dependencies\
Requesting for user\
Bioconda docker \
Use that\
\
\
}